class InfoConfig:
    tower_rus_info_dict = {
        'basic': ('Дешёвая башня, способная\nдавать дополнительные 2\nмонеты за убийство.',
                  'Бонус за убийство\nсуммируется с тайлом.'),
        'sniper': ('Сильная башня, без эффектов.', 
                   'Нет.'),
        'anty_shield': ('Игнорирует броню противника.', 
                        'На бронибойном тайле не\nприобретает дополнительных\nэффектов.'),
        'venom': ('При ударе по врагу\nнакладывает эффект яда.', 
                  'Яд игнорирует броню.\nТайл яда увеличит урон\nот яда на 1.'),
        'anty_invisible': ('Раскрывает невидимость\nврагов в своем радиусе.', 
                           'На противоинвизном тайле\nне приобретает\nдополнительных эффектов.'),
        'cutter': ('Наносит урон всем врагам,\nкоторых пронизал его луч.',
                   'Игнорирует невидимость.'),
        'laser': ('Накладывает эффект лазер.\nОдновременно может наложить\nлазер только на одного врага.',
                  'Нет.'),
        'cannon': ('Бьёт в любую точку карты\nи наносит урон всем врагам\nв радиусе взрыва.',
                   'Игнорирует невидимость.\nТайл радиуса увеличит\nрадиус взрыва.')
    }

    @classmethod
    def get_tower_info(cls, tower_type:str)->tuple:
        return cls.tower_rus_info_dict[tower_type]